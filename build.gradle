plugins {
	id 'fabric-loom' version '0.2.6-SNAPSHOT'
	id 'maven-publish'
	id "com.jfrog.artifactory" version "4.9.0"
	id "com.wynprice.cursemaven" version "1.2.2"
	id 'checkstyle'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

if(rootProject.file("private.gradle").exists()) { //Publishing details
	apply from: "private.gradle"
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
	maven { url "https://jitpack.io" }
	maven {
      name "Cotton"
      url "http://server.bbkr.space:8081/artifactory/libs-release/"
    }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modApi "net.fabricmc:fabric-loader:${project.loader_version}"
	modApi "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    
    modCompile "io.github.cottonmc:LibGui:1.3.1"
	//modImplementation ("com.github.siphalor:nbt-crafting:1.2.5") {transitive=false} // Not on Maven yet.
	//modImplementation curse.resolve("https://curseforge.com/minecraft/mc-mods/metatips/") // MetaTips


	implementation "com.google.code.findbugs:jsr305:3.0.2"
}
processResources {
	inputs.property "version", project.version
	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand version: project.version
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

checkstyle {
	configFile = rootProject.file("checkstyle.xml")
	toolVersion = '8.25'
}

// configure the maven publication
publishing {
	publications {
		maven(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			//artifact(jar) {
			//	builtBy remapJar
			//}
			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") { //release jar - file location not provided anywhere in loom
				classifier null
				builtBy remapJar
			}

			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") { //release jar - file location not provided anywhere in loom
				classifier "dev"
				builtBy remapJar
			}

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

artifactory {
	if (project.hasProperty("artifactoryUsername")) {
		contextUrl = "http://server.bbkr.space:8081/artifactory/"
		publish {
			repository {
				if (version.contains("SNAPSHOT")) {
					repoKey = "libs-snapshot"
				} else {
					repoKey = "libs-release"
				}

				username = artifactoryUsername
				password = artifactoryPassword
			}
			defaults {
				publications("maven")

				publishArtifacts = true
				publishPom = true
			}
		}
	} else {
		println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running artifactoryPublish"
	}
}